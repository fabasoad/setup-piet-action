---
name: "Setup Piet"
author: Yevhen Fabizhevskyi
description: "This GitHub action installs one of the Piet Programming Language interpreters called npiet."
branding:
  icon: terminal
  color: gray-dark
inputs:
  version:
    description: npiet interpreter version.
    required: false
    default: "1.3"
  force:
    description: |
      If "false" skips installation if npiet is already installed. If "true"
      installs npiet in any case. Defaults to "false".
    required: false
    default: "false"
outputs:
  installed:
    description: Whether npiet was installed or not.
    value: "${{ steps.install-npiet.outcome == 'success' }}"
runs:
  using: "composite"
  steps:
    - name: Fail
      if: ${{ runner.os != 'Windows' }}
      run: echo "::error::${RUNNER_OS} ${RUNNER_ARCH} is not supported" && exit 1
      shell: sh

    - name: Collect info
      id: info
      env:
        INPUT_FORCE: "${{ inputs.force }}"
      run: ./collect-info.sh "${INPUT_FORCE}"
      shell: sh
      working-directory: "${{ github.action_path }}/src"

    - name: Install npiet
      if: ${{ steps.info.outputs.bin-installed == 'false' }}
      id: install-npiet
      env:
        INPUT_VERSION: "${{ inputs.version }}"
      run: |
        if ($Env:INPUT_VERSION -eq "1.1") {
          $Version=$Env:INPUT_VERSION
        } else {
          $Version=$Env:INPUT_VERSION + "a"
        }
        Invoke-WebRequest -URI "http://www.bertnase.de/npiet/npiet-$Version-win32.zip" -OutFile npiet.zip
        Expand-Archive npiet.zip -DestinationPath .
        Remove-Item -Path npiet.zip
        echo "${{ steps.info.outputs.bin-path }}" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh
      working-directory: ${{ steps.info.outputs.bin-path }}

    - name: Print version
      run: npiet --version
      shell: sh
